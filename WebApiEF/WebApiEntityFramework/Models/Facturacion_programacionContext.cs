// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace WebApiEntityFramework.Models;

public partial class Facturacion_programacionContext : DbContext
{
    public Facturacion_programacionContext(DbContextOptions<Facturacion_programacionContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Articulo> Articulos { get; set; }

    public virtual DbSet<DetallesFactura> DetallesFacturas { get; set; }

    public virtual DbSet<Factura> Facturas { get; set; }

    public virtual DbSet<FormasPago> FormasPagos { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Articulo>(entity =>
        {
            entity.HasKey(e => e.IdArticulo).HasName("pk_articulo");

            entity.Property(e => e.IdArticulo).HasColumnName("id_articulo");
            entity.Property(e => e.Activo).HasDefaultValue(true);
            entity.Property(e => e.Nombre)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nombre");
            entity.Property(e => e.PrecioUnitario)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("precio_unitario");
        });

        modelBuilder.Entity<DetallesFactura>(entity =>
        {
            entity.HasKey(e => e.IdDetalleFactura).HasName("pk_detalle");

            entity.ToTable("detalles_factura");

            entity.Property(e => e.IdDetalleFactura).HasColumnName("id_detalle_factura");
            entity.Property(e => e.Cantidad).HasColumnName("cantidad");
            entity.Property(e => e.IdArticulo).HasColumnName("id_articulo");
            entity.Property(e => e.IdFactura).HasColumnName("id_factura");

            entity.HasOne(d => d.IdArticuloNavigation).WithMany(p => p.DetallesFacturas)
                .HasForeignKey(d => d.IdArticulo)
                .HasConstraintName("fk_articulo");

            entity.HasOne(d => d.IdFacturaNavigation).WithMany(p => p.DetallesFacturas)
                .HasForeignKey(d => d.IdFactura)
                .HasConstraintName("fk_factura");
        });

        modelBuilder.Entity<Factura>(entity =>
        {
            entity.HasKey(e => e.IdFactura).HasName("pk_factura");

            entity.Property(e => e.IdFactura).HasColumnName("id_factura");
            entity.Property(e => e.Cliente)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cliente");
            entity.Property(e => e.Fecha).HasColumnName("fecha");
            entity.Property(e => e.IdFormaPago).HasColumnName("id_forma_pago");

            entity.HasOne(d => d.IdFormaPagoNavigation).WithMany(p => p.Facturas)
                .HasForeignKey(d => d.IdFormaPago)
                .HasConstraintName("fk_forma_pago");
        });

        modelBuilder.Entity<FormasPago>(entity =>
        {
            entity.HasKey(e => e.IdFormaPago).HasName("pk_forma_pago");

            entity.ToTable("formas_pago");

            entity.Property(e => e.IdFormaPago).HasColumnName("id_forma_pago");
            entity.Property(e => e.FormaPago)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("forma_pago");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}